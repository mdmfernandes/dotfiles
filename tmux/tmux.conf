# : << EOF
set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 200                   # decrease repeat timeout
set -s focus-events on

# prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set -g history-limit 20000                 # boost history

# edit configuration
bind e new-window -n "~/.tmux.conf" "\${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

# theme configuration
set -goq @themepack-status-left-area-middle-format "#(whoami)"
set -goq @themepack-status-left-area-right-format "#I:#P"
set -goq @themepack-status-right-area-left-format "#(cut -c3- ~/.tmux.conf | sh -s _myip)"
set -goq @themepack-status-right-area-middle-format "%d-%b %H:%M"
set -goq @themepack-status-right-area-right-format "#H"
set -goq @themepack-window-status-current-format "#I:#W#{?window_zoomed_flag,:🔍,}"
set -goq @themepack-window-status-format "#I:#W#{?window_bell_flag,:🕭,}#{?window_zoomed_flag,:🔍,}"
set -goq  @theme-status-justify left
set -goqF @theme-window-status-activity-fg "" # invert colors if window has activity
set -goq @theme-status-right-prefix "#{?client_prefix,⌨ ,}" 

# last window style
setw -g window-status-last-style "fg=colour42"

# load theme
set -g @themepack 'powerline/block/orange'


# -- navigation ----------------------------------------------------------------
# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind - split-window -v -c "#{pane_current_path}"
# split current window vertically
bind | split-window -h -c "#{pane_current_path}"

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# window switch position
bind -r S-Left swap-window -t -1  # Move window to left
bind -r S-Right swap-window -t +1 # Move window to right


# -- join windows --------------------------------------------------------------
bind g command-prompt -p "get pane from:"  "join-pane -s :'%%'"
bind s command-prompt -p "send pane to:"  "join-pane -t :'%%'"


# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi H send -X start-of-line
bind-key -T copy-mode-vi L send -X end-of-line


# -- buffers -------------------------------------------------------------------
bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# -- TMUX Plugin Manager -------------------------------------------------------
set -g @tpm_plugins '               \
    tmux-plugins/tpm                \
    jimeh/tmux-themepack            \
    tmux-plugins/tmux-resurrect     \
    tmux-plugins/tmux-logging       \
'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'


# -- override TMUX settings ----------------------------------------------------
if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'

# EOF
#
# _myip() {
#   ip=$(ip -o addr show scope global |\
#       grep -vE '(inet6|vm|virb)' |\
#       awk '{split($4, a, "/"); print a[1] " (" $2 ")\\n"}')
#   tun=$(echo $ip | grep 'tun' | head -n 1)
#   if [ "$tun" ]; then
#       echo "$tun" | xargs
#   else
#       echo "$ip" | head -n 1
#   fi
# }
#
# "$@"
